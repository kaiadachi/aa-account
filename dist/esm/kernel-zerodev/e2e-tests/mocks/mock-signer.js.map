{"version":3,"file":"mock-signer.js","sourceRoot":"","sources":["../../../../../src/kernel-zerodev/e2e-tests/mocks/mock-signer.ts"],"names":[],"mappings":"AAAA,OAAO,EAKN,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,iBAAiB,EAAkB,MAAM,eAAe,CAAC;AAClE,OAAO,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAEjD,MAAM,OAAO,UAAU;IAAvB;QACE;;;;mBAAQ,iBAAiB,CAAC,cAAc,CAAC;WAAC;QAE1C;;;;mBAAa,cAAc;WAAC;IAiB9B,CAAC;IAfC,UAAU;QACR,OAAO,OAAO,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC;IACvE,CAAC;IAED,WAAW,CAAC,IAA+B;QACzC,OAAO,OAAO,CAAC,OAAO,CACpB,sIAAsI,CACvI,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,OAA4B;QACxC,OAAO,OAAO,CAAC,OAAO,CACpB,sIAAsI,CACvI,CAAC;IACJ,CAAC;CACF","sourcesContent":["import {\n  type Address,\n  type Hex,\n  type SignTypedDataParams,\n  type SmartAccountSigner,\n} from \"@alchemy/aa-core\";\nimport { mnemonicToAccount, type HDAccount } from \"viem/accounts\";\nimport { OWNER_MNEMONIC } from \"../constants.js\";\n\nexport class MockSigner implements SmartAccountSigner<HDAccount> {\n  inner = mnemonicToAccount(OWNER_MNEMONIC);\n\n  signerType = \"aa-sdk-tests\";\n\n  getAddress(): Promise<Address> {\n    return Promise.resolve(\"0x48D4d3536cDe7A257087206870c6B6E76e3D4ff4\");\n  }\n\n  signMessage(_msg: Uint8Array | Hex | string): Promise<Hex> {\n    return Promise.resolve(\n      \"0x4d61c5c27fb64b207cbf3bcf60d78e725659cff5f93db9a1316162117dff72aa631761619d93d4d97dfb761ba00b61f9274c6a4a76e494df644d968dd84ddcdb1c\"\n    );\n  }\n\n  signTypedData(_params: SignTypedDataParams): Promise<`0x${string}`> {\n    return Promise.resolve(\n      \"0x4d61c5c27fb64b207cbf3bcf60d78e725659cff5f93db9a1316162117dff72aa631761619d93d4d97dfb761ba00b61f9274c6a4a76e494df644d968dd84ddcdb1c\"\n    );\n  }\n}\n"]}